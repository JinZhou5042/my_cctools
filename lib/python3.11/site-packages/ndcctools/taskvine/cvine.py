# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.1.1
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _cvine
else:
    import _cvine

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)



def new_rmsummayArray(nelements):
    return _cvine.new_rmsummayArray(nelements)

def delete_rmsummayArray(ary):
    return _cvine.delete_rmsummayArray(ary)

def rmsummayArray_getitem(ary, index):
    return _cvine.rmsummayArray_getitem(ary, index)

def rmsummayArray_setitem(ary, index, value):
    return _cvine.rmsummayArray_setitem(ary, index, value)

def timestamp_get():
    return _cvine.timestamp_get()

def timestamp_fmt(buf, size, fmt, ts):
    return _cvine.timestamp_fmt(buf, size, fmt, ts)

def timestamp_sleep(interval):
    return _cvine.timestamp_sleep(interval)

def timestamp_file(file):
    return _cvine.timestamp_file(file)
VINE_DEFAULT_PORT = _cvine.VINE_DEFAULT_PORT
VINE_RANDOM_PORT = _cvine.VINE_RANDOM_PORT
VINE_WAIT_FOREVER = _cvine.VINE_WAIT_FOREVER
VINE_TRANSFER_ALWAYS = _cvine.VINE_TRANSFER_ALWAYS
VINE_FIXED_LOCATION = _cvine.VINE_FIXED_LOCATION
VINE_WATCH = _cvine.VINE_WATCH
VINE_FAILURE_ONLY = _cvine.VINE_FAILURE_ONLY
VINE_SUCCESS_ONLY = _cvine.VINE_SUCCESS_ONLY
VINE_CACHE_NEVER = _cvine.VINE_CACHE_NEVER
VINE_CACHE = _cvine.VINE_CACHE
VINE_CACHE_ALWAYS = _cvine.VINE_CACHE_ALWAYS
VINE_PEER_NOSHARE = _cvine.VINE_PEER_NOSHARE
VINE_SCHEDULE_UNSET = _cvine.VINE_SCHEDULE_UNSET
VINE_SCHEDULE_FCFS = _cvine.VINE_SCHEDULE_FCFS
VINE_SCHEDULE_FILES = _cvine.VINE_SCHEDULE_FILES
VINE_SCHEDULE_TIME = _cvine.VINE_SCHEDULE_TIME
VINE_SCHEDULE_RAND = _cvine.VINE_SCHEDULE_RAND
VINE_SCHEDULE_WORST = _cvine.VINE_SCHEDULE_WORST
VINE_RESULT_SUCCESS = _cvine.VINE_RESULT_SUCCESS
VINE_RESULT_INPUT_MISSING = _cvine.VINE_RESULT_INPUT_MISSING
VINE_RESULT_OUTPUT_MISSING = _cvine.VINE_RESULT_OUTPUT_MISSING
VINE_RESULT_STDOUT_MISSING = _cvine.VINE_RESULT_STDOUT_MISSING
VINE_RESULT_SIGNAL = _cvine.VINE_RESULT_SIGNAL
VINE_RESULT_RESOURCE_EXHAUSTION = _cvine.VINE_RESULT_RESOURCE_EXHAUSTION
VINE_RESULT_MAX_END_TIME = _cvine.VINE_RESULT_MAX_END_TIME
VINE_RESULT_UNKNOWN = _cvine.VINE_RESULT_UNKNOWN
VINE_RESULT_FORSAKEN = _cvine.VINE_RESULT_FORSAKEN
VINE_RESULT_MAX_RETRIES = _cvine.VINE_RESULT_MAX_RETRIES
VINE_RESULT_MAX_WALL_TIME = _cvine.VINE_RESULT_MAX_WALL_TIME
VINE_RESULT_RMONITOR_ERROR = _cvine.VINE_RESULT_RMONITOR_ERROR
VINE_RESULT_OUTPUT_TRANSFER_ERROR = _cvine.VINE_RESULT_OUTPUT_TRANSFER_ERROR
VINE_RESULT_FIXED_LOCATION_MISSING = _cvine.VINE_RESULT_FIXED_LOCATION_MISSING
VINE_TASK_UNKNOWN = _cvine.VINE_TASK_UNKNOWN
VINE_TASK_READY = _cvine.VINE_TASK_READY
VINE_TASK_RUNNING = _cvine.VINE_TASK_RUNNING
VINE_TASK_WAITING_RETRIEVAL = _cvine.VINE_TASK_WAITING_RETRIEVAL
VINE_TASK_RETRIEVED = _cvine.VINE_TASK_RETRIEVED
VINE_TASK_DONE = _cvine.VINE_TASK_DONE
VINE_TASK_CANCELED = _cvine.VINE_TASK_CANCELED
VINE_ALLOCATION_MODE_FIXED = _cvine.VINE_ALLOCATION_MODE_FIXED
VINE_ALLOCATION_MODE_MAX = _cvine.VINE_ALLOCATION_MODE_MAX
VINE_ALLOCATION_MODE_MIN_WASTE = _cvine.VINE_ALLOCATION_MODE_MIN_WASTE
VINE_ALLOCATION_MODE_MAX_THROUGHPUT = _cvine.VINE_ALLOCATION_MODE_MAX_THROUGHPUT
VINE_ALLOCATION_MODE_GREEDY_BUCKETING = _cvine.VINE_ALLOCATION_MODE_GREEDY_BUCKETING
VINE_ALLOCATION_MODE_EXHAUSTIVE_BUCKETING = _cvine.VINE_ALLOCATION_MODE_EXHAUSTIVE_BUCKETING
class vine_stats(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    workers_connected = property(_cvine.vine_stats_workers_connected_get, _cvine.vine_stats_workers_connected_set)
    workers_init = property(_cvine.vine_stats_workers_init_get, _cvine.vine_stats_workers_init_set)
    workers_idle = property(_cvine.vine_stats_workers_idle_get, _cvine.vine_stats_workers_idle_set)
    workers_busy = property(_cvine.vine_stats_workers_busy_get, _cvine.vine_stats_workers_busy_set)
    workers_able = property(_cvine.vine_stats_workers_able_get, _cvine.vine_stats_workers_able_set)
    workers_joined = property(_cvine.vine_stats_workers_joined_get, _cvine.vine_stats_workers_joined_set)
    workers_removed = property(_cvine.vine_stats_workers_removed_get, _cvine.vine_stats_workers_removed_set)
    workers_released = property(_cvine.vine_stats_workers_released_get, _cvine.vine_stats_workers_released_set)
    workers_idled_out = property(_cvine.vine_stats_workers_idled_out_get, _cvine.vine_stats_workers_idled_out_set)
    workers_slow = property(_cvine.vine_stats_workers_slow_get, _cvine.vine_stats_workers_slow_set)
    workers_blocked = property(_cvine.vine_stats_workers_blocked_get, _cvine.vine_stats_workers_blocked_set)
    workers_lost = property(_cvine.vine_stats_workers_lost_get, _cvine.vine_stats_workers_lost_set)
    tasks_waiting = property(_cvine.vine_stats_tasks_waiting_get, _cvine.vine_stats_tasks_waiting_set)
    tasks_on_workers = property(_cvine.vine_stats_tasks_on_workers_get, _cvine.vine_stats_tasks_on_workers_set)
    tasks_running = property(_cvine.vine_stats_tasks_running_get, _cvine.vine_stats_tasks_running_set)
    tasks_with_results = property(_cvine.vine_stats_tasks_with_results_get, _cvine.vine_stats_tasks_with_results_set)
    tasks_submitted = property(_cvine.vine_stats_tasks_submitted_get, _cvine.vine_stats_tasks_submitted_set)
    tasks_dispatched = property(_cvine.vine_stats_tasks_dispatched_get, _cvine.vine_stats_tasks_dispatched_set)
    tasks_done = property(_cvine.vine_stats_tasks_done_get, _cvine.vine_stats_tasks_done_set)
    tasks_failed = property(_cvine.vine_stats_tasks_failed_get, _cvine.vine_stats_tasks_failed_set)
    tasks_cancelled = property(_cvine.vine_stats_tasks_cancelled_get, _cvine.vine_stats_tasks_cancelled_set)
    tasks_exhausted_attempts = property(_cvine.vine_stats_tasks_exhausted_attempts_get, _cvine.vine_stats_tasks_exhausted_attempts_set)
    time_when_started = property(_cvine.vine_stats_time_when_started_get, _cvine.vine_stats_time_when_started_set)
    time_send = property(_cvine.vine_stats_time_send_get, _cvine.vine_stats_time_send_set)
    time_receive = property(_cvine.vine_stats_time_receive_get, _cvine.vine_stats_time_receive_set)
    time_send_good = property(_cvine.vine_stats_time_send_good_get, _cvine.vine_stats_time_send_good_set)
    time_receive_good = property(_cvine.vine_stats_time_receive_good_get, _cvine.vine_stats_time_receive_good_set)
    time_status_msgs = property(_cvine.vine_stats_time_status_msgs_get, _cvine.vine_stats_time_status_msgs_set)
    time_internal = property(_cvine.vine_stats_time_internal_get, _cvine.vine_stats_time_internal_set)
    time_polling = property(_cvine.vine_stats_time_polling_get, _cvine.vine_stats_time_polling_set)
    time_application = property(_cvine.vine_stats_time_application_get, _cvine.vine_stats_time_application_set)
    time_scheduling = property(_cvine.vine_stats_time_scheduling_get, _cvine.vine_stats_time_scheduling_set)
    time_workers_execute = property(_cvine.vine_stats_time_workers_execute_get, _cvine.vine_stats_time_workers_execute_set)
    time_workers_execute_good = property(_cvine.vine_stats_time_workers_execute_good_get, _cvine.vine_stats_time_workers_execute_good_set)
    time_workers_execute_exhaustion = property(_cvine.vine_stats_time_workers_execute_exhaustion_get, _cvine.vine_stats_time_workers_execute_exhaustion_set)
    bytes_sent = property(_cvine.vine_stats_bytes_sent_get, _cvine.vine_stats_bytes_sent_set)
    bytes_received = property(_cvine.vine_stats_bytes_received_get, _cvine.vine_stats_bytes_received_set)
    bandwidth = property(_cvine.vine_stats_bandwidth_get, _cvine.vine_stats_bandwidth_set)
    capacity_tasks = property(_cvine.vine_stats_capacity_tasks_get, _cvine.vine_stats_capacity_tasks_set)
    capacity_cores = property(_cvine.vine_stats_capacity_cores_get, _cvine.vine_stats_capacity_cores_set)
    capacity_memory = property(_cvine.vine_stats_capacity_memory_get, _cvine.vine_stats_capacity_memory_set)
    capacity_disk = property(_cvine.vine_stats_capacity_disk_get, _cvine.vine_stats_capacity_disk_set)
    capacity_gpus = property(_cvine.vine_stats_capacity_gpus_get, _cvine.vine_stats_capacity_gpus_set)
    capacity_instantaneous = property(_cvine.vine_stats_capacity_instantaneous_get, _cvine.vine_stats_capacity_instantaneous_set)
    capacity_weighted = property(_cvine.vine_stats_capacity_weighted_get, _cvine.vine_stats_capacity_weighted_set)
    total_cores = property(_cvine.vine_stats_total_cores_get, _cvine.vine_stats_total_cores_set)
    total_memory = property(_cvine.vine_stats_total_memory_get, _cvine.vine_stats_total_memory_set)
    total_disk = property(_cvine.vine_stats_total_disk_get, _cvine.vine_stats_total_disk_set)
    total_gpus = property(_cvine.vine_stats_total_gpus_get, _cvine.vine_stats_total_gpus_set)
    committed_cores = property(_cvine.vine_stats_committed_cores_get, _cvine.vine_stats_committed_cores_set)
    committed_memory = property(_cvine.vine_stats_committed_memory_get, _cvine.vine_stats_committed_memory_set)
    committed_disk = property(_cvine.vine_stats_committed_disk_get, _cvine.vine_stats_committed_disk_set)
    committed_gpus = property(_cvine.vine_stats_committed_gpus_get, _cvine.vine_stats_committed_gpus_set)
    max_cores = property(_cvine.vine_stats_max_cores_get, _cvine.vine_stats_max_cores_set)
    max_memory = property(_cvine.vine_stats_max_memory_get, _cvine.vine_stats_max_memory_set)
    max_disk = property(_cvine.vine_stats_max_disk_get, _cvine.vine_stats_max_disk_set)
    max_gpus = property(_cvine.vine_stats_max_gpus_get, _cvine.vine_stats_max_gpus_set)
    min_cores = property(_cvine.vine_stats_min_cores_get, _cvine.vine_stats_min_cores_set)
    min_memory = property(_cvine.vine_stats_min_memory_get, _cvine.vine_stats_min_memory_set)
    min_disk = property(_cvine.vine_stats_min_disk_get, _cvine.vine_stats_min_disk_set)
    min_gpus = property(_cvine.vine_stats_min_gpus_get, _cvine.vine_stats_min_gpus_set)
    manager_load = property(_cvine.vine_stats_manager_load_get, _cvine.vine_stats_manager_load_set)

    def __init__(self):
        _cvine.vine_stats_swiginit(self, _cvine.new_vine_stats())
    __swig_destroy__ = _cvine.delete_vine_stats

# Register vine_stats in _cvine:
_cvine.vine_stats_swigregister(vine_stats)

def vine_task_create(full_command):
    return _cvine.vine_task_create(full_command)

def vine_task_delete(t):
    return _cvine.vine_task_delete(t)

def vine_task_set_command(t, cmd):
    return _cvine.vine_task_set_command(t, cmd)

def vine_task_needs_library(t, name):
    return _cvine.vine_task_needs_library(t, name)

def vine_task_provides_library(t, name):
    return _cvine.vine_task_provides_library(t, name)

def vine_task_set_function_slots(t, nslots):
    return _cvine.vine_task_set_function_slots(t, nslots)

def vine_task_add_input(t, f, remote_name, flags):
    return _cvine.vine_task_add_input(t, f, remote_name, flags)

def vine_task_add_output(t, f, remote_name, flags):
    return _cvine.vine_task_add_output(t, f, remote_name, flags)

def vine_task_set_retries(t, max_retries):
    return _cvine.vine_task_set_retries(t, max_retries)

def vine_task_set_memory(t, memory):
    return _cvine.vine_task_set_memory(t, memory)

def vine_task_set_disk(t, disk):
    return _cvine.vine_task_set_disk(t, disk)

def vine_task_set_cores(t, cores):
    return _cvine.vine_task_set_cores(t, cores)

def vine_task_set_gpus(t, gpus):
    return _cvine.vine_task_set_gpus(t, gpus)

def vine_task_set_time_end(t, useconds):
    return _cvine.vine_task_set_time_end(t, useconds)

def vine_task_set_time_start(t, useconds):
    return _cvine.vine_task_set_time_start(t, useconds)

def vine_task_set_time_max(t, seconds):
    return _cvine.vine_task_set_time_max(t, seconds)

def vine_task_set_time_min(t, seconds):
    return _cvine.vine_task_set_time_min(t, seconds)

def vine_task_set_tag(t, tag):
    return _cvine.vine_task_set_tag(t, tag)

def vine_task_set_category(t, category):
    return _cvine.vine_task_set_category(t, category)

def vine_task_add_feature(t, name):
    return _cvine.vine_task_add_feature(t, name)

def vine_task_set_priority(t, priority):
    return _cvine.vine_task_set_priority(t, priority)

def vine_task_set_env_var(t, name, value):
    return _cvine.vine_task_set_env_var(t, name, value)

def vine_task_set_scheduler(t, algorithm):
    return _cvine.vine_task_set_scheduler(t, algorithm)

def vine_task_set_monitor_output(t, monitor_output):
    return _cvine.vine_task_set_monitor_output(t, monitor_output)

def vine_task_get_command(t):
    return _cvine.vine_task_get_command(t)

def vine_task_get_tag(t):
    return _cvine.vine_task_get_tag(t)

def vine_task_get_category(t):
    return _cvine.vine_task_get_category(t)

def vine_task_get_id(t):
    return _cvine.vine_task_get_id(t)

def vine_task_get_result(t):
    return _cvine.vine_task_get_result(t)

def vine_result_string(result):
    return _cvine.vine_result_string(result)

def vine_task_get_exit_code(t):
    return _cvine.vine_task_get_exit_code(t)

def vine_task_get_stdout(t):
    return _cvine.vine_task_get_stdout(t)

def vine_task_get_addrport(t):
    return _cvine.vine_task_get_addrport(t)

def vine_task_get_hostname(t):
    return _cvine.vine_task_get_hostname(t)

def vine_task_get_metric(t, name):
    return _cvine.vine_task_get_metric(t, name)

def vine_task_set_resources(t, rm):
    return _cvine.vine_task_set_resources(t, rm)

def vine_task_get_resources(t, name):
    return _cvine.vine_task_get_resources(t, name)

def vine_task_set_snapshot_file(t, monitor_snapshot_file):
    return _cvine.vine_task_set_snapshot_file(t, monitor_snapshot_file)

def vine_task_add_environment(t, f):
    return _cvine.vine_task_add_environment(t, f)

def vine_file_contents(f):
    return _cvine.vine_file_contents(f)

def vine_file_size(f):
    return _cvine.vine_file_size(f)

def vine_declare_file(m, source, flags):
    return _cvine.vine_declare_file(m, source, flags)

def vine_declare_url(m, url, flags):
    return _cvine.vine_declare_url(m, url, flags)

def vine_declare_xrootd(m, source, proxy, env, flags):
    return _cvine.vine_declare_xrootd(m, source, proxy, env, flags)

def vine_declare_chirp(m, server, source, ticket, env, flags):
    return _cvine.vine_declare_chirp(m, server, source, ticket, env, flags)

def vine_declare_temp(m):
    return _cvine.vine_declare_temp(m)

def vine_declare_buffer(m, buffer, flags):
    return _cvine.vine_declare_buffer(m, buffer, flags)

def vine_declare_empty_dir(m):
    return _cvine.vine_declare_empty_dir(m)

def vine_declare_mini_task(m, mini_task, name, flags):
    return _cvine.vine_declare_mini_task(m, mini_task, name, flags)

def vine_declare_untar(m, f, flags):
    return _cvine.vine_declare_untar(m, f, flags)

def vine_declare_poncho(m, f, flags):
    return _cvine.vine_declare_poncho(m, f, flags)

def vine_declare_starch(m, f, flags):
    return _cvine.vine_declare_starch(m, f, flags)

def vine_fetch_file(m, f):
    return _cvine.vine_fetch_file(m, f)

def vine_remove_file(m, f):
    return _cvine.vine_remove_file(m, f)

def vine_create(port):
    return _cvine.vine_create(port)

def vine_ssl_create(port, key, cert):
    return _cvine.vine_ssl_create(port, key, cert)

def vine_delete(m):
    return _cvine.vine_delete(m)

def vine_submit(m, t):
    return _cvine.vine_submit(m, t)

def vine_manager_install_library(m, t, name):
    return _cvine.vine_manager_install_library(m, t, name)

def vine_manager_remove_library(m, name):
    return _cvine.vine_manager_remove_library(m, name)

def vine_wait(m, timeout):
    return _cvine.vine_wait(m, timeout)

def vine_wait_for_tag(m, tag, timeout):
    return _cvine.vine_wait_for_tag(m, tag, timeout)

def vine_wait_for_task_id(m, task_id, timeout):
    return _cvine.vine_wait_for_task_id(m, task_id, timeout)

def vine_hungry(m):
    return _cvine.vine_hungry(m)

def vine_empty(m):
    return _cvine.vine_empty(m)

def vine_port(m):
    return _cvine.vine_port(m)

def vine_set_name(m, name):
    return _cvine.vine_set_name(m, name)

def vine_get_name(m):
    return _cvine.vine_get_name(m)

def vine_enable_monitoring(m, watchdog, time_series):
    return _cvine.vine_enable_monitoring(m, watchdog, time_series)

def vine_enable_peer_transfers(m):
    return _cvine.vine_enable_peer_transfers(m)

def vine_disable_peer_transfers(m):
    return _cvine.vine_disable_peer_transfers(m)

def vine_set_task_id_min(m, minid):
    return _cvine.vine_set_task_id_min(m, minid)

def vine_block_host(m, hostname):
    return _cvine.vine_block_host(m, hostname)

def vine_block_host_with_timeout(m, hostname, seconds):
    return _cvine.vine_block_host_with_timeout(m, hostname, seconds)

def vine_unblock_host(m, hostname):
    return _cvine.vine_unblock_host(m, hostname)

def vine_unblock_all(m):
    return _cvine.vine_unblock_all(m)

def vine_get_stats(m, s):
    return _cvine.vine_get_stats(m, s)

def vine_get_stats_category(m, c, s):
    return _cvine.vine_get_stats_category(m, c, s)

def vine_get_status(m, request):
    return _cvine.vine_get_status(m, request)

def vine_summarize_workers(m):
    return _cvine.vine_summarize_workers(m)

def vine_task_state(m, task_id):
    return _cvine.vine_task_state(m, task_id)

def vine_set_bandwidth_limit(m, bandwidth):
    return _cvine.vine_set_bandwidth_limit(m, bandwidth)

def vine_get_effective_bandwidth(m):
    return _cvine.vine_get_effective_bandwidth(m)

def vine_enable_disconnect_slow_workers(m, multiplier):
    return _cvine.vine_enable_disconnect_slow_workers(m, multiplier)

def vine_enable_disconnect_slow_workers_category(m, category, multiplier):
    return _cvine.vine_enable_disconnect_slow_workers_category(m, category, multiplier)

def vine_set_draining_by_hostname(m, hostname, drain_flag):
    return _cvine.vine_set_draining_by_hostname(m, hostname, drain_flag)

def vine_set_category_mode(m, category, mode):
    return _cvine.vine_set_category_mode(m, category, mode)

def vine_enable_category_resource(m, category, resource, autolabel):
    return _cvine.vine_enable_category_resource(m, category, resource, autolabel)

def vine_set_scheduler(m, algorithm):
    return _cvine.vine_set_scheduler(m, algorithm)

def vine_set_priority(m, priority):
    return _cvine.vine_set_priority(m, priority)

def vine_set_tasks_left_count(m, ntasks):
    return _cvine.vine_set_tasks_left_count(m, ntasks)

def vine_set_catalog_servers(m, hosts):
    return _cvine.vine_set_catalog_servers(m, hosts)

def vine_cancel_by_task_id(m, id):
    return _cvine.vine_cancel_by_task_id(m, id)

def vine_cancel_by_task_tag(m, tag):
    return _cvine.vine_cancel_by_task_tag(m, tag)

def vine_tasks_cancel(m):
    return _cvine.vine_tasks_cancel(m)

def vine_enable_debug_log(logfile):
    return _cvine.vine_enable_debug_log(logfile)

def vine_enable_perf_log(m, logfile):
    return _cvine.vine_enable_perf_log(m, logfile)

def vine_enable_transactions_log(m, logfile):
    return _cvine.vine_enable_transactions_log(m, logfile)

def vine_enable_taskgraph_log(m, logfile):
    return _cvine.vine_enable_taskgraph_log(m, logfile)

def vine_workers_shutdown(m, n):
    return _cvine.vine_workers_shutdown(m, n)

def vine_set_password(m, password):
    return _cvine.vine_set_password(m, password)

def vine_set_password_file(m, file):
    return _cvine.vine_set_password_file(m, file)

def vine_set_keepalive_interval(m, interval):
    return _cvine.vine_set_keepalive_interval(m, interval)

def vine_set_keepalive_timeout(m, timeout):
    return _cvine.vine_set_keepalive_timeout(m, timeout)

def vine_set_manager_preferred_connection(m, preferred_connection):
    return _cvine.vine_set_manager_preferred_connection(m, preferred_connection)

def vine_tune(m, name, value):
    return _cvine.vine_tune(m, name, value)

def vine_set_resources_max(m, rm):
    return _cvine.vine_set_resources_max(m, rm)

def vine_set_resources_min(m, rm):
    return _cvine.vine_set_resources_min(m, rm)

def vine_set_category_resources_max(m, category, rm):
    return _cvine.vine_set_category_resources_max(m, category, rm)

def vine_set_category_resources_min(m, category, rm):
    return _cvine.vine_set_category_resources_min(m, category, rm)

def vine_set_category_first_allocation_guess(m, category, rm):
    return _cvine.vine_set_category_first_allocation_guess(m, category, rm)

def vine_initialize_categories(m, max, summaries_file):
    return _cvine.vine_initialize_categories(m, max, summaries_file)

def vine_set_runtime_info_path(path):
    return _cvine.vine_set_runtime_info_path(path)
VINE_TASK_TYPE_STANDARD = _cvine.VINE_TASK_TYPE_STANDARD
VINE_TASK_TYPE_RECOVERY = _cvine.VINE_TASK_TYPE_RECOVERY
VINE_TASK_TYPE_LIBRARY = _cvine.VINE_TASK_TYPE_LIBRARY
class vine_task(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    task_id = property(_cvine.vine_task_task_id_get, _cvine.vine_task_task_id_set)
    type = property(_cvine.vine_task_type_get, _cvine.vine_task_type_set)
    command_line = property(_cvine.vine_task_command_line_get, _cvine.vine_task_command_line_set)
    tag = property(_cvine.vine_task_tag_get, _cvine.vine_task_tag_set)
    category = property(_cvine.vine_task_category_get, _cvine.vine_task_category_set)
    monitor_output_directory = property(_cvine.vine_task_monitor_output_directory_get, _cvine.vine_task_monitor_output_directory_set)
    monitor_snapshot_file = property(_cvine.vine_task_monitor_snapshot_file_get, _cvine.vine_task_monitor_snapshot_file_set)
    needs_library = property(_cvine.vine_task_needs_library_get, _cvine.vine_task_needs_library_set)
    provides_library = property(_cvine.vine_task_provides_library_get, _cvine.vine_task_provides_library_set)
    function_slots = property(_cvine.vine_task_function_slots_get, _cvine.vine_task_function_slots_set)
    input_mounts = property(_cvine.vine_task_input_mounts_get, _cvine.vine_task_input_mounts_set)
    output_mounts = property(_cvine.vine_task_output_mounts_get, _cvine.vine_task_output_mounts_set)
    env_list = property(_cvine.vine_task_env_list_get, _cvine.vine_task_env_list_set)
    feature_list = property(_cvine.vine_task_feature_list_get, _cvine.vine_task_feature_list_set)
    resource_request = property(_cvine.vine_task_resource_request_get, _cvine.vine_task_resource_request_set)
    worker_selection_algorithm = property(_cvine.vine_task_worker_selection_algorithm_get, _cvine.vine_task_worker_selection_algorithm_set)
    priority = property(_cvine.vine_task_priority_get, _cvine.vine_task_priority_set)
    max_retries = property(_cvine.vine_task_max_retries_get, _cvine.vine_task_max_retries_set)
    min_running_time = property(_cvine.vine_task_min_running_time_get, _cvine.vine_task_min_running_time_set)
    state = property(_cvine.vine_task_state_get, _cvine.vine_task_state_set)
    worker = property(_cvine.vine_task_worker_get, _cvine.vine_task_worker_set)
    library_task = property(_cvine.vine_task_library_task_get, _cvine.vine_task_library_task_set)
    try_count = property(_cvine.vine_task_try_count_get, _cvine.vine_task_try_count_set)
    exhausted_attempts = property(_cvine.vine_task_exhausted_attempts_get, _cvine.vine_task_exhausted_attempts_set)
    workers_slow = property(_cvine.vine_task_workers_slow_get, _cvine.vine_task_workers_slow_set)
    function_slots_inuse = property(_cvine.vine_task_function_slots_inuse_get, _cvine.vine_task_function_slots_inuse_set)
    result = property(_cvine.vine_task_result_get, _cvine.vine_task_result_set)
    exit_code = property(_cvine.vine_task_exit_code_get, _cvine.vine_task_exit_code_set)
    output = property(_cvine.vine_task_output_get, _cvine.vine_task_output_set)
    addrport = property(_cvine.vine_task_addrport_get, _cvine.vine_task_addrport_set)
    hostname = property(_cvine.vine_task_hostname_get, _cvine.vine_task_hostname_set)
    time_when_submitted = property(_cvine.vine_task_time_when_submitted_get, _cvine.vine_task_time_when_submitted_set)
    time_when_done = property(_cvine.vine_task_time_when_done_get, _cvine.vine_task_time_when_done_set)
    time_when_commit_start = property(_cvine.vine_task_time_when_commit_start_get, _cvine.vine_task_time_when_commit_start_set)
    time_when_commit_end = property(_cvine.vine_task_time_when_commit_end_get, _cvine.vine_task_time_when_commit_end_set)
    time_when_retrieval = property(_cvine.vine_task_time_when_retrieval_get, _cvine.vine_task_time_when_retrieval_set)
    time_workers_execute_last_start = property(_cvine.vine_task_time_workers_execute_last_start_get, _cvine.vine_task_time_workers_execute_last_start_set)
    time_workers_execute_last_end = property(_cvine.vine_task_time_workers_execute_last_end_get, _cvine.vine_task_time_workers_execute_last_end_set)
    time_workers_execute_last = property(_cvine.vine_task_time_workers_execute_last_get, _cvine.vine_task_time_workers_execute_last_set)
    time_workers_execute_all = property(_cvine.vine_task_time_workers_execute_all_get, _cvine.vine_task_time_workers_execute_all_set)
    time_workers_execute_exhaustion = property(_cvine.vine_task_time_workers_execute_exhaustion_get, _cvine.vine_task_time_workers_execute_exhaustion_set)
    time_workers_execute_failure = property(_cvine.vine_task_time_workers_execute_failure_get, _cvine.vine_task_time_workers_execute_failure_set)
    bytes_received = property(_cvine.vine_task_bytes_received_get, _cvine.vine_task_bytes_received_set)
    bytes_sent = property(_cvine.vine_task_bytes_sent_get, _cvine.vine_task_bytes_sent_set)
    bytes_transferred = property(_cvine.vine_task_bytes_transferred_get, _cvine.vine_task_bytes_transferred_set)
    resources_allocated = property(_cvine.vine_task_resources_allocated_get, _cvine.vine_task_resources_allocated_set)
    resources_measured = property(_cvine.vine_task_resources_measured_get, _cvine.vine_task_resources_measured_set)
    resources_requested = property(_cvine.vine_task_resources_requested_get, _cvine.vine_task_resources_requested_set)
    current_resource_box = property(_cvine.vine_task_current_resource_box_get, _cvine.vine_task_current_resource_box_set)
    has_fixed_locations = property(_cvine.vine_task_has_fixed_locations_get, _cvine.vine_task_has_fixed_locations_set)
    refcount = property(_cvine.vine_task_refcount_get, _cvine.vine_task_refcount_set)

    def __init__(self):
        _cvine.vine_task_swiginit(self, _cvine.new_vine_task())
    __swig_destroy__ = _cvine.delete_vine_task

# Register vine_task in _cvine:
_cvine.vine_task_swigregister(vine_task)

def vine_task_clone(t):
    return _cvine.vine_task_clone(t)

def vine_task_copy(t):
    return _cvine.vine_task_copy(t)

def vine_task_reset(t):
    return _cvine.vine_task_reset(t)

def vine_task_clean(t):
    return _cvine.vine_task_clean(t)

def vine_task_set_result(t, new_result):
    return _cvine.vine_task_set_result(t, new_result)

def vine_task_check_consistency(t):
    return _cvine.vine_task_check_consistency(t)

def vine_task_state_to_string(task_state):
    return _cvine.vine_task_state_to_string(task_state)

def vine_task_to_jx(q, t):
    return _cvine.vine_task_to_jx(q, t)

def vine_task_to_json(t):
    return _cvine.vine_task_to_json(t)

def vine_task_add_input_file(t, local_name, remote_name, flags):
    return _cvine.vine_task_add_input_file(t, local_name, remote_name, flags)

def vine_task_add_output_file(t, local_name, remote_name, flags):
    return _cvine.vine_task_add_output_file(t, local_name, remote_name, flags)

def vine_task_add_input_url(t, url, remote_name, flags):
    return _cvine.vine_task_add_input_url(t, url, remote_name, flags)

def vine_task_add_input_mini_task(t, mini_task, remote_name, flags):
    return _cvine.vine_task_add_input_mini_task(t, mini_task, remote_name, flags)

def vine_task_add_input_buffer(t, data, length, remote_name, flags):
    return _cvine.vine_task_add_input_buffer(t, data, length, remote_name, flags)

def vine_task_add_empty_dir(t, remote_name):
    return _cvine.vine_task_add_empty_dir(t, remote_name)
VINE_FILE = _cvine.VINE_FILE
VINE_URL = _cvine.VINE_URL
VINE_TEMP = _cvine.VINE_TEMP
VINE_BUFFER = _cvine.VINE_BUFFER
VINE_MINI_TASK = _cvine.VINE_MINI_TASK
VINE_EMPTY_DIR = _cvine.VINE_EMPTY_DIR
class vine_file(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    type = property(_cvine.vine_file_type_get, _cvine.vine_file_type_set)
    flags = property(_cvine.vine_file_flags_get, _cvine.vine_file_flags_set)
    source = property(_cvine.vine_file_source_get, _cvine.vine_file_source_set)
    cached_name = property(_cvine.vine_file_cached_name_get, _cvine.vine_file_cached_name_set)
    size = property(_cvine.vine_file_size_get, _cvine.vine_file_size_set)
    data = property(_cvine.vine_file_data_get, _cvine.vine_file_data_set)
    mini_task = property(_cvine.vine_file_mini_task_get, _cvine.vine_file_mini_task_set)
    recovery_task = property(_cvine.vine_file_recovery_task_get, _cvine.vine_file_recovery_task_set)
    created = property(_cvine.vine_file_created_get, _cvine.vine_file_created_set)
    refcount = property(_cvine.vine_file_refcount_get, _cvine.vine_file_refcount_set)

    def __init__(self):
        _cvine.vine_file_swiginit(self, _cvine.new_vine_file())
    __swig_destroy__ = _cvine.delete_vine_file

# Register vine_file in _cvine:
_cvine.vine_file_swigregister(vine_file)

def vine_file_create(source, cached_name, data, size, type, mini_task, flags):
    return _cvine.vine_file_create(source, cached_name, data, size, type, mini_task, flags)

def vine_file_substitute_url(f, source):
    return _cvine.vine_file_substitute_url(f, source)

def vine_file_clone(f):
    return _cvine.vine_file_clone(f)

def vine_file_delete(f):
    return _cvine.vine_file_delete(f)

def vine_file_local(source, flags):
    return _cvine.vine_file_local(source, flags)

def vine_file_url(source, flags):
    return _cvine.vine_file_url(source, flags)

def vine_file_temp():
    return _cvine.vine_file_temp()

def vine_file_buffer(buffer, flags):
    return _cvine.vine_file_buffer(buffer, flags)

def vine_file_empty_dir():
    return _cvine.vine_file_empty_dir()

def vine_file_mini_task(t, name, flags):
    return _cvine.vine_file_mini_task(t, name, flags)

def vine_file_untar(f, flags):
    return _cvine.vine_file_untar(f, flags)

def vine_file_poncho(f, flags):
    return _cvine.vine_file_poncho(f, flags)

def vine_file_starch(f, flags):
    return _cvine.vine_file_starch(f, flags)

def vine_file_xrootd(source, proxy, env, flags):
    return _cvine.vine_file_xrootd(source, proxy, env, flags)

def vine_file_chirp(server, source, ticket, env, flags):
    return _cvine.vine_file_chirp(server, source, ticket, env, flags)

def vine_runtime_directory_create():
    return _cvine.vine_runtime_directory_create()

def vine_get_runtime_path_log(m, path):
    return _cvine.vine_get_runtime_path_log(m, path)

def vine_get_runtime_path_staging(m, path):
    return _cvine.vine_get_runtime_path_staging(m, path)

def vine_get_runtime_path_caching(m, path):
    return _cvine.vine_get_runtime_path_caching(m, path)

