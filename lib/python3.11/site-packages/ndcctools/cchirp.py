# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.1.1
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _cchirp
else:
    import _cchirp

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


D_INFO = _cchirp.D_INFO
D_FATAL = _cchirp.D_FATAL
D_ERROR = _cchirp.D_ERROR
D_NOTICE = _cchirp.D_NOTICE
D_DEBUG = _cchirp.D_DEBUG
D_SYSCALL = _cchirp.D_SYSCALL
D_CHANNEL = _cchirp.D_CHANNEL
D_PROCESS = _cchirp.D_PROCESS
D_RESOLVE = _cchirp.D_RESOLVE
D_LIBCALL = _cchirp.D_LIBCALL
D_LOCAL = _cchirp.D_LOCAL
D_DNS = _cchirp.D_DNS
D_TCP = _cchirp.D_TCP
D_AUTH = _cchirp.D_AUTH
D_IRODS = _cchirp.D_IRODS
D_CVMFS = _cchirp.D_CVMFS
D_HTTP = _cchirp.D_HTTP
D_FTP = _cchirp.D_FTP
D_NEST = _cchirp.D_NEST
D_GROW = _cchirp.D_GROW
D_CHIRP = _cchirp.D_CHIRP
D_DCAP = _cchirp.D_DCAP
D_RFIO = _cchirp.D_RFIO
D_GLITE = _cchirp.D_GLITE
D_MULTI = _cchirp.D_MULTI
D_PSTREE = _cchirp.D_PSTREE
D_ALLOC = _cchirp.D_ALLOC
D_LFC = _cchirp.D_LFC
D_GFAL = _cchirp.D_GFAL
D_SUMMARY = _cchirp.D_SUMMARY
D_LOGIN = _cchirp.D_LOGIN
D_CACHE = _cchirp.D_CACHE
D_POLL = _cchirp.D_POLL
D_HDFS = _cchirp.D_HDFS
D_WQ = _cchirp.D_WQ
D_BXGRID = _cchirp.D_BXGRID
D_USER = _cchirp.D_USER
D_XROOTD = _cchirp.D_XROOTD
D_MPI = _cchirp.D_MPI
D_BATCH = _cchirp.D_BATCH
D_RMON = _cchirp.D_RMON
D_MAKEFLOW_RUN = _cchirp.D_MAKEFLOW_RUN
D_MAKEFLOW_LEXER = _cchirp.D_MAKEFLOW_LEXER
D_MAKEFLOW_PARSER = _cchirp.D_MAKEFLOW_PARSER
D_MAKEFLOW_ALLOC = _cchirp.D_MAKEFLOW_ALLOC
D_CONFUGA = _cchirp.D_CONFUGA
D_JX = _cchirp.D_JX
D_MAKEFLOW_HOOK = _cchirp.D_MAKEFLOW_HOOK
D_EXT = _cchirp.D_EXT
D_VINE = _cchirp.D_VINE
D_TLQ = _cchirp.D_TLQ
D_SSL = _cchirp.D_SSL
D_BUCKETING = _cchirp.D_BUCKETING
D_REMOTE = _cchirp.D_REMOTE
D_MAKEFLOW = _cchirp.D_MAKEFLOW
D_ALL = _cchirp.D_ALL

def cctools_debug(*args):
    return _cchirp.cctools_debug(*args)

def cctools_warn(*args):
    return _cchirp.cctools_warn(*args)

def cctools_fatal(*args):
    return _cchirp.cctools_fatal(*args)

def cctools_notice(*args):
    return _cchirp.cctools_notice(*args)

def cctools_debug_config(name):
    return _cchirp.cctools_debug_config(name)

def cctools_debug_config_file(file):
    return _cchirp.cctools_debug_config_file(file)

def debug_config_file_e(file):
    return _cchirp.debug_config_file_e(file)

def cctools_debug_config_file_size(size):
    return _cchirp.cctools_debug_config_file_size(size)

def cctools_debug_config_fatal(callback):
    return _cchirp.cctools_debug_config_fatal(callback)

def cctools_debug_config_getpid(getpidf):
    return _cchirp.cctools_debug_config_getpid(getpidf)

def cctools_debug_flags_set(flagname):
    return _cchirp.cctools_debug_flags_set(flagname)

def cctools_debug_flags_print(stream):
    return _cchirp.cctools_debug_flags_print(stream)

def cctools_debug_flags_clear():
    return _cchirp.cctools_debug_flags_clear()

def cctools_debug_set_flag_name(flag, name):
    return _cchirp.cctools_debug_set_flag_name(flag, name)

def cctools_debug_flags_restore(flags):
    return _cchirp.cctools_debug_flags_restore(flags)

def cctools_debug_rename(suffix):
    return _cchirp.cctools_debug_rename(suffix)

def debug_reopen():
    return _cchirp.debug_reopen()

def debug_close():
    return _cchirp.debug_close()

def timestamp_get():
    return _cchirp.timestamp_get()

def timestamp_fmt(buf, size, fmt, ts):
    return _cchirp.timestamp_fmt(buf, size, fmt, ts)

def timestamp_sleep(interval):
    return _cchirp.timestamp_sleep(interval)

def timestamp_file(file):
    return _cchirp.timestamp_file(file)

def auth_register_byname(name):
    return _cchirp.auth_register_byname(name)

def auth_register_all():
    return _cchirp.auth_register_all()

def auth_ticket_register():
    return _cchirp.auth_ticket_register()

def auth_ticket_server_callback(sc):
    return _cchirp.auth_ticket_server_callback(sc)

def auth_ticket_load(tickets):
    return _cchirp.auth_ticket_load(tickets)

def chirp_reli_open(host, path, flags, mode, stoptime):
    return _cchirp.chirp_reli_open(host, path, flags, mode, stoptime)

def chirp_reli_close(file, stoptime):
    return _cchirp.chirp_reli_close(file, stoptime)

def chirp_reli_pread(file, buffer, length, offset, stoptime):
    return _cchirp.chirp_reli_pread(file, buffer, length, offset, stoptime)

def chirp_reli_pwrite(file, buffer, length, offset, stoptime):
    return _cchirp.chirp_reli_pwrite(file, buffer, length, offset, stoptime)

def chirp_reli_pread_unbuffered(file, buffer, length, offset, stoptime):
    return _cchirp.chirp_reli_pread_unbuffered(file, buffer, length, offset, stoptime)

def chirp_reli_pwrite_unbuffered(file, buffer, length, offset, stoptime):
    return _cchirp.chirp_reli_pwrite_unbuffered(file, buffer, length, offset, stoptime)

def chirp_reli_sread(file, buffer, length, stride_length, stride_skip, offset, stoptime):
    return _cchirp.chirp_reli_sread(file, buffer, length, stride_length, stride_skip, offset, stoptime)

def chirp_reli_swrite(file, buffer, length, stride_length, stride_skip, offset, stoptime):
    return _cchirp.chirp_reli_swrite(file, buffer, length, stride_length, stride_skip, offset, stoptime)

def chirp_reli_fstat(file, info, stoptime):
    return _cchirp.chirp_reli_fstat(file, info, stoptime)

def chirp_reli_fstatfs(file, info, stoptime):
    return _cchirp.chirp_reli_fstatfs(file, info, stoptime)

def chirp_reli_fchown(file, uid, gid, stoptime):
    return _cchirp.chirp_reli_fchown(file, uid, gid, stoptime)

def chirp_reli_fchmod(file, mode, stoptime):
    return _cchirp.chirp_reli_fchmod(file, mode, stoptime)

def chirp_reli_ftruncate(file, length, stoptime):
    return _cchirp.chirp_reli_ftruncate(file, length, stoptime)

def chirp_reli_flush(file, stoptime):
    return _cchirp.chirp_reli_flush(file, stoptime)

def chirp_reli_fsync(file, stoptime):
    return _cchirp.chirp_reli_fsync(file, stoptime)

def chirp_reli_getfile(host, path, stream, stoptime):
    return _cchirp.chirp_reli_getfile(host, path, stream, stoptime)

def chirp_reli_getfile_buffer(host, path, buffer, stoptime):
    return _cchirp.chirp_reli_getfile_buffer(host, path, buffer, stoptime)

def chirp_reli_putfile(host, path, stream, mode, length, stoptime):
    return _cchirp.chirp_reli_putfile(host, path, stream, mode, length, stoptime)

def chirp_reli_putfile_buffer(host, path, buffer, mode, length, stoptime):
    return _cchirp.chirp_reli_putfile_buffer(host, path, buffer, mode, length, stoptime)

def chirp_reli_opensearch(host, paths, pattern, flags, stoptime):
    return _cchirp.chirp_reli_opensearch(host, paths, pattern, flags, stoptime)

def chirp_reli_getlongdir(host, path, callback, arg, stoptime):
    return _cchirp.chirp_reli_getlongdir(host, path, callback, arg, stoptime)

def chirp_reli_getdir(host, path, callback, arg, stoptime):
    return _cchirp.chirp_reli_getdir(host, path, callback, arg, stoptime)

def chirp_reli_opendir(host, path, stoptime):
    return _cchirp.chirp_reli_opendir(host, path, stoptime)

def chirp_reli_readdir(dir):
    return _cchirp.chirp_reli_readdir(dir)

def chirp_reli_closedir(dir):
    return _cchirp.chirp_reli_closedir(dir)

def chirp_reli_ticket_create(host, name, bits, stoptime):
    return _cchirp.chirp_reli_ticket_create(host, name, bits, stoptime)

def chirp_reli_ticket_register(host, name, subject, duration, stoptime):
    return _cchirp.chirp_reli_ticket_register(host, name, subject, duration, stoptime)

def chirp_reli_ticket_delete(host, name, stoptime):
    return _cchirp.chirp_reli_ticket_delete(host, name, stoptime)

def chirp_reli_ticket_list(host, subject, list, stoptime):
    return _cchirp.chirp_reli_ticket_list(host, subject, list, stoptime)

def chirp_reli_ticket_get(host, name, subject, ticket, duration, rights, stoptime):
    return _cchirp.chirp_reli_ticket_get(host, name, subject, ticket, duration, rights, stoptime)

def chirp_reli_ticket_modify(host, name, path, aclmask, stoptime):
    return _cchirp.chirp_reli_ticket_modify(host, name, path, aclmask, stoptime)

def chirp_reli_getacl(host, path, callback, arg, stoptime):
    return _cchirp.chirp_reli_getacl(host, path, callback, arg, stoptime)

def chirp_reli_setacl(host, path, subject, rights, stoptime):
    return _cchirp.chirp_reli_setacl(host, path, subject, rights, stoptime)

def chirp_reli_resetacl(host, path, rights, stoptime):
    return _cchirp.chirp_reli_resetacl(host, path, rights, stoptime)

def chirp_reli_locate(host, path, callback, arg, stoptime):
    return _cchirp.chirp_reli_locate(host, path, callback, arg, stoptime)

def chirp_reli_whoami(host, subject, length, stoptime):
    return _cchirp.chirp_reli_whoami(host, subject, length, stoptime)

def chirp_reli_whoareyou(host, rhost, subject, length, stoptime):
    return _cchirp.chirp_reli_whoareyou(host, rhost, subject, length, stoptime)

def chirp_reli_unlink(host, path, stoptime):
    return _cchirp.chirp_reli_unlink(host, path, stoptime)

def chirp_reli_rename(host, path, newpath, stoptime):
    return _cchirp.chirp_reli_rename(host, path, newpath, stoptime)

def chirp_reli_link(host, path, newpath, stoptime):
    return _cchirp.chirp_reli_link(host, path, newpath, stoptime)

def chirp_reli_symlink(host, path, newpath, stoptime):
    return _cchirp.chirp_reli_symlink(host, path, newpath, stoptime)

def chirp_reli_readlink(host, path, buf, length, stoptime):
    return _cchirp.chirp_reli_readlink(host, path, buf, length, stoptime)

def chirp_reli_mkdir(host, path, mode, stoptime):
    return _cchirp.chirp_reli_mkdir(host, path, mode, stoptime)

def chirp_reli_mkdir_recursive(host, path, mode, stoptime):
    return _cchirp.chirp_reli_mkdir_recursive(host, path, mode, stoptime)

def chirp_reli_rmdir(host, path, stoptime):
    return _cchirp.chirp_reli_rmdir(host, path, stoptime)

def chirp_reli_rmall(host, path, stoptime):
    return _cchirp.chirp_reli_rmall(host, path, stoptime)

def chirp_reli_stat(host, path, info, stoptime):
    return _cchirp.chirp_reli_stat(host, path, info, stoptime)

def chirp_reli_lstat(host, path, info, stoptime):
    return _cchirp.chirp_reli_lstat(host, path, info, stoptime)

def chirp_reli_statfs(host, path, info, stoptime):
    return _cchirp.chirp_reli_statfs(host, path, info, stoptime)

def chirp_reli_access(host, path, flags, stoptime):
    return _cchirp.chirp_reli_access(host, path, flags, stoptime)

def chirp_reli_chmod(host, path, mode, stoptime):
    return _cchirp.chirp_reli_chmod(host, path, mode, stoptime)

def chirp_reli_chown(host, path, uid, gid, stoptime):
    return _cchirp.chirp_reli_chown(host, path, uid, gid, stoptime)

def chirp_reli_lchown(host, path, uid, gid, stoptime):
    return _cchirp.chirp_reli_lchown(host, path, uid, gid, stoptime)

def chirp_reli_truncate(host, path, length, stoptime):
    return _cchirp.chirp_reli_truncate(host, path, length, stoptime)

def chirp_reli_utime(host, path, actime, modtime, stoptime):
    return _cchirp.chirp_reli_utime(host, path, actime, modtime, stoptime)

def chirp_reli_hash(host, path, algorithm, digest, stoptime):
    return _cchirp.chirp_reli_hash(host, path, algorithm, digest, stoptime)

def chirp_reli_md5(host, path, digest, stoptime):
    return _cchirp.chirp_reli_md5(host, path, digest, stoptime)

def chirp_reli_setrep(host, path, nreps, stoptime):
    return _cchirp.chirp_reli_setrep(host, path, nreps, stoptime)

def chirp_reli_getxattr(host, path, name, data, size, stoptime):
    return _cchirp.chirp_reli_getxattr(host, path, name, data, size, stoptime)

def chirp_reli_fgetxattr(file, name, data, size, stoptime):
    return _cchirp.chirp_reli_fgetxattr(file, name, data, size, stoptime)

def chirp_reli_lgetxattr(host, path, name, data, size, stoptime):
    return _cchirp.chirp_reli_lgetxattr(host, path, name, data, size, stoptime)

def chirp_reli_listxattr(host, path, list, size, stoptime):
    return _cchirp.chirp_reli_listxattr(host, path, list, size, stoptime)

def chirp_reli_flistxattr(file, list, size, stoptime):
    return _cchirp.chirp_reli_flistxattr(file, list, size, stoptime)

def chirp_reli_llistxattr(host, path, list, size, stoptime):
    return _cchirp.chirp_reli_llistxattr(host, path, list, size, stoptime)

def chirp_reli_setxattr(host, path, name, data, size, flags, stoptime):
    return _cchirp.chirp_reli_setxattr(host, path, name, data, size, flags, stoptime)

def chirp_reli_fsetxattr(file, name, data, size, flags, stoptime):
    return _cchirp.chirp_reli_fsetxattr(file, name, data, size, flags, stoptime)

def chirp_reli_lsetxattr(host, path, name, data, size, flags, stoptime):
    return _cchirp.chirp_reli_lsetxattr(host, path, name, data, size, flags, stoptime)

def chirp_reli_removexattr(host, path, name, stoptime):
    return _cchirp.chirp_reli_removexattr(host, path, name, stoptime)

def chirp_reli_fremovexattr(file, name, stoptime):
    return _cchirp.chirp_reli_fremovexattr(file, name, stoptime)

def chirp_reli_lremovexattr(host, path, name, stoptime):
    return _cchirp.chirp_reli_lremovexattr(host, path, name, stoptime)

def chirp_reli_job_create(host, json, id, stoptime):
    return _cchirp.chirp_reli_job_create(host, json, id, stoptime)

def chirp_reli_job_commit(host, json, stoptime):
    return _cchirp.chirp_reli_job_commit(host, json, stoptime)

def chirp_reli_job_kill(host, json, stoptime):
    return _cchirp.chirp_reli_job_kill(host, json, stoptime)

def chirp_reli_job_status(host, json, status, stoptime):
    return _cchirp.chirp_reli_job_status(host, json, status, stoptime)

def chirp_reli_job_wait(host, id, timeout, status, stoptime):
    return _cchirp.chirp_reli_job_wait(host, id, timeout, status, stoptime)

def chirp_reli_job_reap(host, json, stoptime):
    return _cchirp.chirp_reli_job_reap(host, json, stoptime)

def chirp_reli_remote_debug(host, flag, stoptime):
    return _cchirp.chirp_reli_remote_debug(host, flag, stoptime)

def chirp_reli_localpath(host, path, localpath, length, stoptime):
    return _cchirp.chirp_reli_localpath(host, path, localpath, length, stoptime)

def chirp_reli_audit(host, path, list, stoptime):
    return _cchirp.chirp_reli_audit(host, path, list, stoptime)

def chirp_reli_thirdput(host, path, thirdhost, thirdpath, stoptime):
    return _cchirp.chirp_reli_thirdput(host, path, thirdhost, thirdpath, stoptime)

def chirp_reli_mkalloc(host, path, size, mode, stoptime):
    return _cchirp.chirp_reli_mkalloc(host, path, size, mode, stoptime)

def chirp_reli_lsalloc(host, path, allocpath, total, inuse, stoptime):
    return _cchirp.chirp_reli_lsalloc(host, path, allocpath, total, inuse, stoptime)

def chirp_reli_bulkio(list, count, stoptime):
    return _cchirp.chirp_reli_bulkio(list, count, stoptime)

def chirp_reli_blocksize_get():
    return _cchirp.chirp_reli_blocksize_get()

def chirp_reli_blocksize_set(bs):
    return _cchirp.chirp_reli_blocksize_set(bs)

def chirp_reli_cleanup_before_fork():
    return _cchirp.chirp_reli_cleanup_before_fork()

def chirp_reli_disconnect(host):
    return _cchirp.chirp_reli_disconnect(host)

def chirp_recursive_put(hostport, sourcepath, targetpath, stoptime):
    return _cchirp.chirp_recursive_put(hostport, sourcepath, targetpath, stoptime)

def chirp_recursive_get(hostport, sourcepath, targetpath, stoptime):
    return _cchirp.chirp_recursive_get(hostport, sourcepath, targetpath, stoptime)
class chirp_stat(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    cst_dev = property(_cchirp.chirp_stat_cst_dev_get, _cchirp.chirp_stat_cst_dev_set)
    cst_ino = property(_cchirp.chirp_stat_cst_ino_get, _cchirp.chirp_stat_cst_ino_set)
    cst_mode = property(_cchirp.chirp_stat_cst_mode_get, _cchirp.chirp_stat_cst_mode_set)
    cst_nlink = property(_cchirp.chirp_stat_cst_nlink_get, _cchirp.chirp_stat_cst_nlink_set)
    cst_uid = property(_cchirp.chirp_stat_cst_uid_get, _cchirp.chirp_stat_cst_uid_set)
    cst_gid = property(_cchirp.chirp_stat_cst_gid_get, _cchirp.chirp_stat_cst_gid_set)
    cst_rdev = property(_cchirp.chirp_stat_cst_rdev_get, _cchirp.chirp_stat_cst_rdev_set)
    cst_size = property(_cchirp.chirp_stat_cst_size_get, _cchirp.chirp_stat_cst_size_set)
    cst_blksize = property(_cchirp.chirp_stat_cst_blksize_get, _cchirp.chirp_stat_cst_blksize_set)
    cst_blocks = property(_cchirp.chirp_stat_cst_blocks_get, _cchirp.chirp_stat_cst_blocks_set)
    cst_atime = property(_cchirp.chirp_stat_cst_atime_get, _cchirp.chirp_stat_cst_atime_set)
    cst_mtime = property(_cchirp.chirp_stat_cst_mtime_get, _cchirp.chirp_stat_cst_mtime_set)
    cst_ctime = property(_cchirp.chirp_stat_cst_ctime_get, _cchirp.chirp_stat_cst_ctime_set)

    def __init__(self):
        _cchirp.chirp_stat_swiginit(self, _cchirp.new_chirp_stat())
    __swig_destroy__ = _cchirp.delete_chirp_stat

# Register chirp_stat in _cchirp:
_cchirp.chirp_stat_swigregister(chirp_stat)
class chirp_statfs(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    f_type = property(_cchirp.chirp_statfs_f_type_get, _cchirp.chirp_statfs_f_type_set)
    f_blocks = property(_cchirp.chirp_statfs_f_blocks_get, _cchirp.chirp_statfs_f_blocks_set)
    f_bavail = property(_cchirp.chirp_statfs_f_bavail_get, _cchirp.chirp_statfs_f_bavail_set)
    f_bsize = property(_cchirp.chirp_statfs_f_bsize_get, _cchirp.chirp_statfs_f_bsize_set)
    f_bfree = property(_cchirp.chirp_statfs_f_bfree_get, _cchirp.chirp_statfs_f_bfree_set)
    f_files = property(_cchirp.chirp_statfs_f_files_get, _cchirp.chirp_statfs_f_files_set)
    f_ffree = property(_cchirp.chirp_statfs_f_ffree_get, _cchirp.chirp_statfs_f_ffree_set)

    def __init__(self):
        _cchirp.chirp_statfs_swiginit(self, _cchirp.new_chirp_statfs())
    __swig_destroy__ = _cchirp.delete_chirp_statfs

# Register chirp_statfs in _cchirp:
_cchirp.chirp_statfs_swigregister(chirp_statfs)
class chirp_dirent(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    name = property(_cchirp.chirp_dirent_name_get, _cchirp.chirp_dirent_name_set)
    lstatus = property(_cchirp.chirp_dirent_lstatus_get, _cchirp.chirp_dirent_lstatus_set)
    info = property(_cchirp.chirp_dirent_info_get, _cchirp.chirp_dirent_info_set)
    next_entry = property(_cchirp.chirp_dirent_next_entry_get, _cchirp.chirp_dirent_next_entry_set)

    def __init__(self):
        _cchirp.chirp_dirent_swiginit(self, _cchirp.new_chirp_dirent())
    __swig_destroy__ = _cchirp.delete_chirp_dirent

# Register chirp_dirent in _cchirp:
_cchirp.chirp_dirent_swigregister(chirp_dirent)
class chirp_searchent(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    path = property(_cchirp.chirp_searchent_path_get, _cchirp.chirp_searchent_path_set)
    info = property(_cchirp.chirp_searchent_info_get, _cchirp.chirp_searchent_info_set)
    errsource = property(_cchirp.chirp_searchent_errsource_get, _cchirp.chirp_searchent_errsource_set)
    err = property(_cchirp.chirp_searchent_err_get, _cchirp.chirp_searchent_err_set)

    def __init__(self):
        _cchirp.chirp_searchent_swiginit(self, _cchirp.new_chirp_searchent())
    __swig_destroy__ = _cchirp.delete_chirp_searchent

# Register chirp_searchent in _cchirp:
_cchirp.chirp_searchent_swigregister(chirp_searchent)
class chirp_searchstream(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    entry = property(_cchirp.chirp_searchstream_entry_get, _cchirp.chirp_searchstream_entry_set)
    current = property(_cchirp.chirp_searchstream_current_get, _cchirp.chirp_searchstream_current_set)
    B = property(_cchirp.chirp_searchstream_B_get, _cchirp.chirp_searchstream_B_set)

    def __init__(self):
        _cchirp.chirp_searchstream_swiginit(self, _cchirp.new_chirp_searchstream())
    __swig_destroy__ = _cchirp.delete_chirp_searchstream

# Register chirp_searchstream in _cchirp:
_cchirp.chirp_searchstream_swigregister(chirp_searchstream)
CHIRP_SEARCH_STOPATFIRST = _cchirp.CHIRP_SEARCH_STOPATFIRST
CHIRP_SEARCH_METADATA = _cchirp.CHIRP_SEARCH_METADATA
CHIRP_SEARCH_INCLUDEROOT = _cchirp.CHIRP_SEARCH_INCLUDEROOT
CHIRP_SEARCH_PERIOD = _cchirp.CHIRP_SEARCH_PERIOD
CHIRP_SEARCH_R_OK = _cchirp.CHIRP_SEARCH_R_OK
CHIRP_SEARCH_W_OK = _cchirp.CHIRP_SEARCH_W_OK
CHIRP_SEARCH_X_OK = _cchirp.CHIRP_SEARCH_X_OK
CHIRP_SEARCH_ERR_OPEN = _cchirp.CHIRP_SEARCH_ERR_OPEN
CHIRP_SEARCH_ERR_READ = _cchirp.CHIRP_SEARCH_ERR_READ
CHIRP_SEARCH_ERR_CLOSE = _cchirp.CHIRP_SEARCH_ERR_CLOSE
CHIRP_SEARCH_ERR_STAT = _cchirp.CHIRP_SEARCH_ERR_STAT
CHIRP_SEARCH_DELIMITER = _cchirp.CHIRP_SEARCH_DELIMITER
CHIRP_SEARCH_DEPTH_MAX = _cchirp.CHIRP_SEARCH_DEPTH_MAX
CHIRP_BULKIO_PREAD = _cchirp.CHIRP_BULKIO_PREAD
CHIRP_BULKIO_PWRITE = _cchirp.CHIRP_BULKIO_PWRITE
CHIRP_BULKIO_SREAD = _cchirp.CHIRP_BULKIO_SREAD
CHIRP_BULKIO_SWRITE = _cchirp.CHIRP_BULKIO_SWRITE
CHIRP_BULKIO_FSTAT = _cchirp.CHIRP_BULKIO_FSTAT
CHIRP_BULKIO_FSYNC = _cchirp.CHIRP_BULKIO_FSYNC
class chirp_bulkio(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    type_io = property(_cchirp.chirp_bulkio_type_io_get, _cchirp.chirp_bulkio_type_io_set)
    file = property(_cchirp.chirp_bulkio_file_get, _cchirp.chirp_bulkio_file_set)
    info = property(_cchirp.chirp_bulkio_info_get, _cchirp.chirp_bulkio_info_set)
    buffer = property(_cchirp.chirp_bulkio_buffer_get, _cchirp.chirp_bulkio_buffer_set)
    length = property(_cchirp.chirp_bulkio_length_get, _cchirp.chirp_bulkio_length_set)
    stride_length = property(_cchirp.chirp_bulkio_stride_length_get, _cchirp.chirp_bulkio_stride_length_set)
    stride_skip = property(_cchirp.chirp_bulkio_stride_skip_get, _cchirp.chirp_bulkio_stride_skip_set)
    offset = property(_cchirp.chirp_bulkio_offset_get, _cchirp.chirp_bulkio_offset_set)
    result = property(_cchirp.chirp_bulkio_result_get, _cchirp.chirp_bulkio_result_set)
    errnum = property(_cchirp.chirp_bulkio_errnum_get, _cchirp.chirp_bulkio_errnum_set)

    def __init__(self):
        _cchirp.chirp_bulkio_swiginit(self, _cchirp.new_chirp_bulkio())
    __swig_destroy__ = _cchirp.delete_chirp_bulkio

# Register chirp_bulkio in _cchirp:
_cchirp.chirp_bulkio_swigregister(chirp_bulkio)
class chirp_audit(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    name = property(_cchirp.chirp_audit_name_get, _cchirp.chirp_audit_name_set)
    nfiles = property(_cchirp.chirp_audit_nfiles_get, _cchirp.chirp_audit_nfiles_set)
    ndirs = property(_cchirp.chirp_audit_ndirs_get, _cchirp.chirp_audit_ndirs_set)
    nbytes = property(_cchirp.chirp_audit_nbytes_get, _cchirp.chirp_audit_nbytes_set)

    def __init__(self):
        _cchirp.chirp_audit_swiginit(self, _cchirp.new_chirp_audit())
    __swig_destroy__ = _cchirp.delete_chirp_audit

# Register chirp_audit in _cchirp:
_cchirp.chirp_audit_swigregister(chirp_audit)
CHIRP_DIGEST_MAX = _cchirp.CHIRP_DIGEST_MAX

def chirp_wrap_stat(hostname, path, stoptime):
    return _cchirp.chirp_wrap_stat(hostname, path, stoptime)

def chirp_wrap_listacl(hostname, path, stoptime):
    return _cchirp.chirp_wrap_listacl(hostname, path, stoptime)

def chirp_wrap_whoami(hostname, stoptime):
    return _cchirp.chirp_wrap_whoami(hostname, stoptime)

def chirp_wrap_hash(hostname, path, algorithm, stoptime):
    return _cchirp.chirp_wrap_hash(hostname, path, algorithm, stoptime)

def chirp_wrap_job_create(host, json, stoptime):
    return _cchirp.chirp_wrap_job_create(host, json, stoptime)

def chirp_wrap_job_commit(host, json, stoptime):
    return _cchirp.chirp_wrap_job_commit(host, json, stoptime)

def chirp_wrap_job_kill(host, json, stoptime):
    return _cchirp.chirp_wrap_job_kill(host, json, stoptime)

def chirp_wrap_job_reap(host, json, stoptime):
    return _cchirp.chirp_wrap_job_reap(host, json, stoptime)

def chirp_wrap_job_status(host, json, stoptime):
    return _cchirp.chirp_wrap_job_status(host, json, stoptime)

def chirp_wrap_job_wait(host, id, timeout, stoptime):
    return _cchirp.chirp_wrap_job_wait(host, id, timeout, stoptime)

